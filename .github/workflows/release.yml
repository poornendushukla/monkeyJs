name: release
on:
  workflow_dispatch:

concurrency: ${{github.workflow}}-${{github.ref}}

env:
  CI: true
  PNPM_CACHE_FOLDER: .pnpm-store

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: pnpm/action-setup@v2
        with:
          version: 9

      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: pnpm
          registry-url: https://registry.npmjs.org

      - run: pnpm install --frozen-lockfile

      - name: Get release info
        id: release
        run: |
          RELEASE_INFO=$(pnpm exec changeset status --output=json)
          echo "packages=$(echo $RELEASE_INFO | jq -r '.releases[].name' | tr '\n' ' ')" >> $GITHUB_OUTPUT
          echo "releases=$RELEASE_INFO" >> $GITHUB_OUTPUT

      - name: Build changed packages
        if: steps.release.outputs.packages != ''
        run: pnpm build --filter="${{ steps.release.outputs.packages }}"

      - name: Version packages
        if: steps.release.outputs.packages != ''
        run: |
          echo '${{ steps.release.outputs.releases }}' | jq -r '.releases[] | "\(.name)@\(.type)"' | while read package_info; do
            package_name=$(echo $package_info | cut -d@ -f1)
            bump_type=$(echo $package_info | cut -d@ -f2)
            cd packages/$package_name
            npm version $bump_type
            cd ../..
          done

      - name: Publish packages
        if: steps.release.outputs.packages != ''
        run: |
          echo '${{ steps.release.outputs.releases }}' | jq -r '.releases[].name' | while read package; do
            cd packages/$package
            npm publish --access public
            cd ../..
          done
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create Git Tag
        if: steps.release.outputs.packages != ''
        run: |
          git config user.name "poornendushukla"
          git config user.email "shuklapoornendu@gmail.com"
          git tag -a "release-$(date +'%Y%m%d%H%M%S')" -m "Release $(date +'%Y-%m-%d %H:%M:%S')"
          git push --tags
